
// app.use(): 미들웨어 함수를 애플리케이션에 등록한다.
// ctx: Context, 웹 요청과 응답에 관한 정보를 지닌다.
// next: 다음 미들웨어를 호출한다.

app.use(async (ctx, next) => {
  console.log(ctx.url);
  console.log(1);
  if (ctx.query.authorized !== '1') {
    ctx.status = 401; //Unauthorized
    return;
  }
  await next();
  console.log('END');
});

app.use((ctx, next) => {
  console.log(2);
  next();
});

app.use(ctx => {
  ctx.body = 'hello world';
}); 

// :(콜론) params
// 파라미터 뒤 ? 파라미터가 있을 수도 있고 없을 수도 있다.
router.get('/about/:name?', ctx => {
  const { name } = ctx.params;
  ctx.body = name ? `${name}'s About Page` : 'About Page';
});

// /?id = 10
// ctx.query
router.get('/posts', ctx => {
  const { id } = ctx.query;
  ctx.body = id ? `Post #${id}` : 'Post Page';
});